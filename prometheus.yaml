---
apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  releaseName: prometheus
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com
    name: prometheus
    version: 8.4.3
    #version: 8.8.0
  values:
    alertmanager:
      enabled: false
    nodeExporter:
      tolerations:
        - effect: NoExecute
          key: tapserver
          operator: Equal
          value: "true"
        - effect: NoExecute
          key: kafkabroker
          operator: Equal
          value: "true"
    server:
      global:
        scrape_interval: 15s
        scrape_timeout: 10s
      persistentVolume:
        #storageClass: "aws-efs"
        enabled: false
#      service:
#        annotations:
#          getambassador.io/config: |-
#            ---
#            apiVersion: ambassador/v1
#            kind:  Mapping
#            name:  prometheus_external-gateway_mapping
#            prefix: /
#            host: prometheus.usw2.demo.inmoment.com
#            service: prometheus-server.monitoring:80
#            ambassador_id: external-gateway
#            timeout_ms: 60000
#      extraSecretMounts:
#        - name: basic-auth-password-file
#          mountPath: /etc/secrets
#          subPath: ""
#          secretName: prometheus-basic-auth
#          readOnly: true
    serverFiles:
      prometheus.yml:
        rule_files:
          - /etc/config/rules
          - /etc/config/alerts

        scrape_configs:
          - job_name: prometheus
            static_configs:
              - targets:
                - localhost:9090

          # A scrape configuration for running Prometheus on a Kubernetes cluster.
          # This uses separate scrape configs for cluster components (i.e. API server, node)
          # and services to allow each to use different authentication configs.
          #
          # Kubernetes labels will be added as Prometheus labels on metrics via the
          # `labelmap` relabeling action.

          # Scrape config for API servers.
          #
          # Kubernetes exposes API servers as endpoints to the default/kubernetes
          # service so this uses `endpoints` role and uses relabelling to only keep
          # the endpoints associated with the default/kubernetes service using the
          # default named port `https`. This works for single API server deployments as
          # well as HA API server deployments.
          - job_name: 'kubernetes-apiservers'

            kubernetes_sd_configs:
              - role: endpoints

            # Default to scraping over https. If required, just disable this or change to
            # `http`.
            scheme: https

            # This TLS & bearer token file config is used to connect to the actual scrape
            # endpoints for cluster components. This is separate to discovery auth
            # configuration because discovery & scraping are two separate concerns in
            # Prometheus. The discovery auth config is automatic if Prometheus runs inside
            # the cluster. Otherwise, more config options have to be provided within the
            # <kubernetes_sd_config>.
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              # If your node certificates are self-signed or use a different CA to the
              # master CA, then disable certificate verification below. Note that
              # certificate verification is an integral part of a secure infrastructure
              # so this should only be disabled in a controlled environment. You can
              # disable certificate verification by uncommenting the line below.
              #
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

            # Keep only the default/kubernetes service endpoints for the https port. This
            # will add targets for each API server which Kubernetes adds an endpoint to
            # the default/kubernetes service.
            relabel_configs:
              - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
                action: keep
                regex: default;kubernetes;https

          - job_name: 'kubernetes-nodes'

            # Default to scraping over https. If required, just disable this or change to
            # `http`.
            scheme: https

            # This TLS & bearer token file config is used to connect to the actual scrape
            # endpoints for cluster components. This is separate to discovery auth
            # configuration because discovery & scraping are two separate concerns in
            # Prometheus. The discovery auth config is automatic if Prometheus runs inside
            # the cluster. Otherwise, more config options have to be provided within the
            # <kubernetes_sd_config>.
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              # If your node certificates are self-signed or use a different CA to the
              # master CA, then disable certificate verification below. Note that
              # certificate verification is an integral part of a secure infrastructure
              # so this should only be disabled in a controlled environment. You can
              # disable certificate verification by uncommenting the line below.
              #
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

            kubernetes_sd_configs:
              - role: node

            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
                replacement: kubernetes.default.svc:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/$1/proxy/metrics


          - job_name: 'kubernetes-nodes-cadvisor'

            # Default to scraping over https. If required, just disable this or change to
            # `http`.
            scheme: https

            # This TLS & bearer token file config is used to connect to the actual scrape
            # endpoints for cluster components. This is separate to discovery auth
            # configuration because discovery & scraping are two separate concerns in
            # Prometheus. The discovery auth config is automatic if Prometheus runs inside
            # the cluster. Otherwise, more config options have to be provided within the
            # <kubernetes_sd_config>.
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              # If your node certificates are self-signed or use a different CA to the
              # master CA, then disable certificate verification below. Note that
              # certificate verification is an integral part of a secure infrastructure
              # so this should only be disabled in a controlled environment. You can
              # disable certificate verification by uncommenting the line below.
              #
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

            kubernetes_sd_configs:
              - role: node

            # This configuration will work only on kubelet 1.7.3+
            # As the scrape endpoints for cAdvisor have changed
            # if you are using older version you need to change the replacement to
            # replacement: /api/v1/nodes/$1:4194/proxy/metrics
            # more info here https://github.com/coreos/prometheus-operator/issues/633
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
                replacement: kubernetes.default.svc:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

          # Scrape config for service endpoints.
          #
          # The relabeling allows the actual service scrape endpoint to be configured
          # via the following annotations:
          #
          # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
          # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
          # to set this to `https` & most likely set the `tls_config` of the scrape config.
          # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
          # * `prometheus.io/port`: If the metrics are exposed on a different port to the
          # service then set this appropriately.
          - job_name: 'kubernetes-service-endpoints'

            kubernetes_sd_configs:
              - role: endpoints

            relabel_configs:
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: kubernetes_name
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: kubernetes_node

          - job_name: 'prometheus-pushgateway'
            honor_labels: true

            kubernetes_sd_configs:
              - role: service

            relabel_configs:
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
                action: keep
                regex: pushgateway

          # Example scrape config for probing services via the Blackbox Exporter.
          #
          # The relabeling allows the actual service scrape endpoint to be configured
          # via the following annotations:
          #
          # * `prometheus.io/probe`: Only probe services that have a value of `true`
          - job_name: 'kubernetes-services'

            metrics_path: /probe
            params:
              module: [http_2xx]

            kubernetes_sd_configs:
              - role: service

            relabel_configs:
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
                action: keep
                regex: true
              - source_labels: [__address__]
                target_label: __param_target
              - target_label: __address__
                replacement: blackbox
              - source_labels: [__param_target]
                target_label: instance
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_service_name]
                target_label: kubernetes_name

          # Example scrape config for pods
          #
          # The relabeling allows the actual pod scrape endpoint to be configured via the
          # following annotations:
          #
          # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
          # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
          # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
          - job_name: 'kubernetes-pods'
            basic_auth:
                username: 'prometheus'
                password_file: '/etc/secrets/basic_auth'

            kubernetes_sd_configs:
              - role: pod

            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name

    extraScrapeConfigs: |-
      - job_name: 'node'
        metrics_path: "/metrics"
        scrape_interval: 15s
        scrape_timeout: 10s
        tls_config:
          insecure_skip_verify: true
        ec2_sd_configs:
          - region: us-west-2
            port: 9100
        relabel_configs:
          - source_labels: [__meta_ec2_tag_platform]
            regex: windows
            action: drop
          - source_labels: [__meta_ec2_tag_prometheus]
            regex: disable
            action: drop
          - source_labels: [__meta_ec2_instance_state]
            regex: running
            action: keep
          - source_labels: [__meta_ec2_tag_Name]
            target_label: instance
          - source_labels: [__meta_ec2_instance_id]
            target_label: instance_id
          - source_labels: [__meta_ec2_tag_role]
            target_label: role
          - source_labels: [__meta_ec2_tag_cost_center]
            target_label: cost_center
      - job_name: 'node-radiant'
        metrics_path: "/metrics"
        scrape_interval: 15s
        scrape_timeout: 10s
        tls_config:
          insecure_skip_verify: true
        ec2_sd_configs:
          - region: us-west-2
            port: 9110
        relabel_configs:
           - source_labels: [__meta_ec2_tag_role]
             regex: radiant
             action: keep
          - source_labels: [__meta_ec2_tag_platform]
            regex: windows
            action: drop
          - source_labels: [__meta_ec2_tag_prometheus]
            regex: disable
            action: drop
          - source_labels: [__meta_ec2_instance_state]
            regex: running
            action: keep
          - source_labels: [__meta_ec2_tag_Name]
            target_label: instance
          - source_labels: [__meta_ec2_instance_id]
            target_label: instance_id
          - source_labels: [__meta_ec2_tag_role]
            target_label: role
          - source_labels: [__meta_ec2_tag_cost_center]
            target_label: cost_center

    #   - job_name: 'node-windows'
    #     metrics_path: "/metrics"
    #     scrape_interval: 15s
    #     scrape_timeout: 10s
    #     tls_config:
    #       insecure_skip_verify: true
    #     ec2_sd_configs:
    #       - region: us-west-2
    #         port: 9182
    #         filters:
    #         - name: platform
    #           values:
    #             - windows
        # relabel_configs:
        #   - source_labels: [__meta_ec2_tag_platform]
        #     target_label: platform
        #   - source_labels: [__meta_ec2_tag_Name]
        #     target_label: instance
        #   - source_labels: [__meta_ec2_instance_id]
        #     target_label: instance_id
        #   - source_labels: [__meta_ec2_tag_role]
        #     target_label: role
        #   - source_labels: [__meta_ec2_tag_cost_center]
        #     target_label: cost_center

